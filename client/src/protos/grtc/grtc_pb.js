/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_rpc_status_pb = require('../google/rpc/status_pb.js');
goog.exportSymbol('proto.grtc.Call', null, global);
goog.exportSymbol('proto.grtc.Data', null, global);
goog.exportSymbol('proto.grtc.End', null, global);
goog.exportSymbol('proto.grtc.Header', null, global);
goog.exportSymbol('proto.grtc.Metadata', null, global);
goog.exportSymbol('proto.grtc.Request', null, global);
goog.exportSymbol('proto.grtc.Response', null, global);
goog.exportSymbol('proto.grtc.Routing', null, global);
goog.exportSymbol('proto.grtc.Strings', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Routing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.Routing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Routing.displayName = 'proto.grtc.Routing';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Routing.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Routing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Routing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Routing.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Routing}
 */
proto.grtc.Routing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Routing;
  return proto.grtc.Routing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Routing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Routing}
 */
proto.grtc.Routing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Routing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Routing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Routing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Routing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 sequence = 1;
 * @return {number}
 */
proto.grtc.Routing.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.grtc.Routing.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grtc.Request.oneofGroups_);
};
goog.inherits(proto.grtc.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Request.displayName = 'proto.grtc.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grtc.Request.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.grtc.Request.TypeCase = {
  TYPE_NOT_SET: 0,
  CALL: 2,
  DATA: 3,
  END: 4
};

/**
 * @return {proto.grtc.Request.TypeCase}
 */
proto.grtc.Request.prototype.getTypeCase = function() {
  return /** @type {proto.grtc.Request.TypeCase} */(jspb.Message.computeOneofCase(this, proto.grtc.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    routing: (f = msg.getRouting()) && proto.grtc.Routing.toObject(includeInstance, f),
    call: (f = msg.getCall()) && proto.grtc.Call.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.grtc.Data.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.grtc.End.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Request}
 */
proto.grtc.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Request;
  return proto.grtc.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Request}
 */
proto.grtc.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grtc.Routing;
      reader.readMessage(value,proto.grtc.Routing.deserializeBinaryFromReader);
      msg.setRouting(value);
      break;
    case 2:
      var value = new proto.grtc.Call;
      reader.readMessage(value,proto.grtc.Call.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 3:
      var value = new proto.grtc.Data;
      reader.readMessage(value,proto.grtc.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.grtc.End;
      reader.readMessage(value,proto.grtc.End.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouting();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grtc.Routing.serializeBinaryToWriter
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grtc.Call.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grtc.Data.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grtc.End.serializeBinaryToWriter
    );
  }
};


/**
 * optional Routing routing = 1;
 * @return {?proto.grtc.Routing}
 */
proto.grtc.Request.prototype.getRouting = function() {
  return /** @type{?proto.grtc.Routing} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Routing, 1));
};


/** @param {?proto.grtc.Routing|undefined} value */
proto.grtc.Request.prototype.setRouting = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.grtc.Request.prototype.clearRouting = function() {
  this.setRouting(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Request.prototype.hasRouting = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Call call = 2;
 * @return {?proto.grtc.Call}
 */
proto.grtc.Request.prototype.getCall = function() {
  return /** @type{?proto.grtc.Call} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Call, 2));
};


/** @param {?proto.grtc.Call|undefined} value */
proto.grtc.Request.prototype.setCall = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.grtc.Request.oneofGroups_[0], value);
};


proto.grtc.Request.prototype.clearCall = function() {
  this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Request.prototype.hasCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data data = 3;
 * @return {?proto.grtc.Data}
 */
proto.grtc.Request.prototype.getData = function() {
  return /** @type{?proto.grtc.Data} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Data, 3));
};


/** @param {?proto.grtc.Data|undefined} value */
proto.grtc.Request.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.grtc.Request.oneofGroups_[0], value);
};


proto.grtc.Request.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Request.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional End end = 4;
 * @return {?proto.grtc.End}
 */
proto.grtc.Request.prototype.getEnd = function() {
  return /** @type{?proto.grtc.End} */ (
    jspb.Message.getWrapperField(this, proto.grtc.End, 4));
};


/** @param {?proto.grtc.End|undefined} value */
proto.grtc.Request.prototype.setEnd = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.grtc.Request.oneofGroups_[0], value);
};


proto.grtc.Request.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Request.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.grtc.Response.oneofGroups_);
};
goog.inherits(proto.grtc.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Response.displayName = 'proto.grtc.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.grtc.Response.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.grtc.Response.TypeCase = {
  TYPE_NOT_SET: 0,
  HEADER: 2,
  DATA: 3,
  END: 4
};

/**
 * @return {proto.grtc.Response.TypeCase}
 */
proto.grtc.Response.prototype.getTypeCase = function() {
  return /** @type {proto.grtc.Response.TypeCase} */(jspb.Message.computeOneofCase(this, proto.grtc.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    routing: (f = msg.getRouting()) && proto.grtc.Routing.toObject(includeInstance, f),
    header: (f = msg.getHeader()) && proto.grtc.Header.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.grtc.Data.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.grtc.End.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Response}
 */
proto.grtc.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Response;
  return proto.grtc.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Response}
 */
proto.grtc.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grtc.Routing;
      reader.readMessage(value,proto.grtc.Routing.deserializeBinaryFromReader);
      msg.setRouting(value);
      break;
    case 2:
      var value = new proto.grtc.Header;
      reader.readMessage(value,proto.grtc.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 3:
      var value = new proto.grtc.Data;
      reader.readMessage(value,proto.grtc.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.grtc.End;
      reader.readMessage(value,proto.grtc.End.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouting();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grtc.Routing.serializeBinaryToWriter
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grtc.Header.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.grtc.Data.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grtc.End.serializeBinaryToWriter
    );
  }
};


/**
 * optional Routing routing = 1;
 * @return {?proto.grtc.Routing}
 */
proto.grtc.Response.prototype.getRouting = function() {
  return /** @type{?proto.grtc.Routing} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Routing, 1));
};


/** @param {?proto.grtc.Routing|undefined} value */
proto.grtc.Response.prototype.setRouting = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.grtc.Response.prototype.clearRouting = function() {
  this.setRouting(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Response.prototype.hasRouting = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Header header = 2;
 * @return {?proto.grtc.Header}
 */
proto.grtc.Response.prototype.getHeader = function() {
  return /** @type{?proto.grtc.Header} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Header, 2));
};


/** @param {?proto.grtc.Header|undefined} value */
proto.grtc.Response.prototype.setHeader = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.grtc.Response.oneofGroups_[0], value);
};


proto.grtc.Response.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Response.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Data data = 3;
 * @return {?proto.grtc.Data}
 */
proto.grtc.Response.prototype.getData = function() {
  return /** @type{?proto.grtc.Data} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Data, 3));
};


/** @param {?proto.grtc.Data|undefined} value */
proto.grtc.Response.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.grtc.Response.oneofGroups_[0], value);
};


proto.grtc.Response.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Response.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional End end = 4;
 * @return {?proto.grtc.End}
 */
proto.grtc.Response.prototype.getEnd = function() {
  return /** @type{?proto.grtc.End} */ (
    jspb.Message.getWrapperField(this, proto.grtc.End, 4));
};


/** @param {?proto.grtc.End|undefined} value */
proto.grtc.Response.prototype.setEnd = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.grtc.Response.oneofGroups_[0], value);
};


proto.grtc.Response.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Response.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Strings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grtc.Strings.repeatedFields_, null);
};
goog.inherits(proto.grtc.Strings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Strings.displayName = 'proto.grtc.Strings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grtc.Strings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Strings.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Strings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Strings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Strings.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Strings}
 */
proto.grtc.Strings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Strings;
  return proto.grtc.Strings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Strings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Strings}
 */
proto.grtc.Strings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Strings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Strings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Strings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Strings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.grtc.Strings.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.grtc.Strings.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.grtc.Strings.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.grtc.Strings.prototype.clearValuesList = function() {
  this.setValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Metadata.displayName = 'proto.grtc.Metadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    mdMap: (f = msg.getMdMap()) ? f.toObject(includeInstance, proto.grtc.Strings.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Metadata}
 */
proto.grtc.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Metadata;
  return proto.grtc.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Metadata}
 */
proto.grtc.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getMdMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.grtc.Strings.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMdMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.grtc.Strings.serializeBinaryToWriter);
  }
};


/**
 * map<string, Strings> md = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.grtc.Strings>}
 */
proto.grtc.Metadata.prototype.getMdMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.grtc.Strings>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.grtc.Strings));
};


proto.grtc.Metadata.prototype.clearMdMap = function() {
  this.getMdMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Call = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.Call, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Call.displayName = 'proto.grtc.Call';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Call.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Call.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Call} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Call.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.grtc.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Call}
 */
proto.grtc.Call.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Call;
  return proto.grtc.Call.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Call} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Call}
 */
proto.grtc.Call.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = new proto.grtc.Metadata;
      reader.readMessage(value,proto.grtc.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Call.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Call.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Call} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Call.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grtc.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.grtc.Call.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.grtc.Call.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Metadata metadata = 2;
 * @return {?proto.grtc.Metadata}
 */
proto.grtc.Call.prototype.getMetadata = function() {
  return /** @type{?proto.grtc.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Metadata, 2));
};


/** @param {?proto.grtc.Metadata|undefined} value */
proto.grtc.Call.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.grtc.Call.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Call.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Header.displayName = 'proto.grtc.Header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Header.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Header.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.grtc.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Header}
 */
proto.grtc.Header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Header;
  return proto.grtc.Header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Header}
 */
proto.grtc.Header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.grtc.Metadata;
      reader.readMessage(value,proto.grtc.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grtc.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Metadata metadata = 2;
 * @return {?proto.grtc.Metadata}
 */
proto.grtc.Header.prototype.getMetadata = function() {
  return /** @type{?proto.grtc.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Metadata, 2));
};


/** @param {?proto.grtc.Metadata|undefined} value */
proto.grtc.Header.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.grtc.Header.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.Header.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.Data.displayName = 'proto.grtc.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.Data}
 */
proto.grtc.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.Data;
  return proto.grtc.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.Data}
 */
proto.grtc.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.grtc.Data.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.grtc.Data.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.grtc.Data.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.grtc.Data.prototype.setData = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grtc.End = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grtc.End, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.grtc.End.displayName = 'proto.grtc.End';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grtc.End.prototype.toObject = function(opt_includeInstance) {
  return proto.grtc.End.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grtc.End} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.End.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    trailer: (f = msg.getTrailer()) && proto.grtc.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grtc.End}
 */
proto.grtc.End.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grtc.End;
  return proto.grtc.End.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grtc.End} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grtc.End}
 */
proto.grtc.End.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.grtc.Metadata;
      reader.readMessage(value,proto.grtc.Metadata.deserializeBinaryFromReader);
      msg.setTrailer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grtc.End.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grtc.End.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grtc.End} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grtc.End.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getTrailer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grtc.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.grtc.End.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/** @param {?proto.google.rpc.Status|undefined} value */
proto.grtc.End.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.grtc.End.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.End.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Metadata trailer = 2;
 * @return {?proto.grtc.Metadata}
 */
proto.grtc.End.prototype.getTrailer = function() {
  return /** @type{?proto.grtc.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.grtc.Metadata, 2));
};


/** @param {?proto.grtc.Metadata|undefined} value */
proto.grtc.End.prototype.setTrailer = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.grtc.End.prototype.clearTrailer = function() {
  this.setTrailer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.grtc.End.prototype.hasTrailer = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.grtc);
